
@mixin transition($transition...) {
  transition: $transition;
}

@mixin transition-property($property...) {
  transition-property: $property;
}

@mixin transition-duration($duration...) {
  transition-property: $duration;
}

@mixin transition-timing-function($timing...) {
  transition-timing-function: $timing;
}

@mixin transition-delay($delay...) {
  transition-delay: $delay;
}

@mixin scroll-block {
  &::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.3);
    border-radius: 15px;
    background-color: transparent;
  }

  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    background-color: transparent;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 4px rgba(0, 0, 0, .3);
    background-color: rgba($color-gray, 0.87);
  }
  &::-webkit-scrollbar-thumb:hover {
    background-color: rgba($color-gray, 1);
  }
}

@mixin scroll-block-none {
  &::-webkit-scrollbar-track {
    border-radius: 15px;
    background-color: transparent;
  }

  &::-webkit-scrollbar {
    width: 1px;
    height: 1px;
    //background-color: rgba($lightgray,1);
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 1px;
    //background-color: rgba($lightgray,1);
  }
  &::-webkit-scrollbar-thumb:hover {
    //background-color: rgba($lightgray,1);
  }
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    box-shadow: inset $top $left $blur $color;
  } @else {
    box-shadow: $top $left $blur $color;
  }
}

/* Mixin */


@function rem($size) {
  $remSize: $size / $default-font-size;
  @return #{$remSize}rem;
}

@function rel($size) {
  $relSize: $size / 1920 * 100;
  @return #{$relSize};
}

@mixin box-shadow($params) {
  box-shadow: $params;
}

@mixin border-radius($param) {
  -moz-border-radius: $param;
  -webkit-border-radius: $param;
  -khtml-border-radius: $param;
  border-radius: $param;
}

@mixin font($custom-size: 18, $custom-line-height: $custom-size, $custom-weight: normal) {
  font: {
    size: rem($custom-size);
    weight: $custom-weight;
  }
  line-height: ($custom-line-height / $custom-size);
}

@mixin abs($custom-top: 0, $custom-left: 0, $custom-right: 0, $custom-bottom: 0, $custom-position: absolute) {
  top: $custom-top;
  left: $custom-left;
  right: $custom-right;
  bottom: $custom-bottom;
  position: $custom-position;
}


//
@mixin link-color($custom-color: $main-link-color, $custom-color-hover: $main-link-color-hover) {
  color: $custom-color;
  &:hover {
    color: $custom-color-hover;
  }
}

@mixin border($border-color, $border-width, $border-style: solid) {
  border: {
    color: $border-color;
    width: $border-width;
    style: $border-style;
  }
}

@mixin before {
  &:before {
    content: "";
    display: inline-block;
    @content;
  }
}

@mixin after {
  &:after {
    content: "";
    display: inline-block;
    @content;
  }
}

@mixin text-border($color-fill,$color-border) {
  color: $color-fill;
  -webkit-text-fill-color: $color-fill;
  -webkit-text-stroke: 1px $color-border;
  text-shadow: -1px -1px 0 $color-border,
  1px -1px 0 $color-border,
  -1px 1px 0 $color-border,
  1px 1px 0 $color-border;
  @include tablet {
    text-shadow: 0 0 0 $color-border,
    0 0 0 $color-border,
    0 0 0 $color-border,
    0 0 0 $color-border;
  }
}

@function calcFluidFontSize($f-min, $f-max, $v-min, $v-max, $units: px) {
  $k: ($f-max - $f-min)/($v-max - $v-min);
  $k: ($k * 100) / 100;
  //$k: round($k * 10000) / 10000;
  $b: $f-min - $k * $v-min;
  $b: ($b * 100) / 100;
  //$b: round($b * 10000) / 10000;
  $b: $b + $units;

  @return calc(#{$k} * 100vw + #{$b});
}

@function pxVh($f-px, $vh) {
  $k: $f-px/$vh * 100;
  $k: round($k * 100) / 100;
  $b: vh;
  @return #{$k}#{$b} ;
}

@function pxVw($f-px, $vw) {
  $k: $f-px/$vw * 100;
  $k: round($k * 100) / 100;
  $b: vw;
  @return #{$k}#{$b} ;
}

@mixin bottom-navigation {
  padding-bottom: 13.5vh;
}

@mixin animation($property...) {
  animation: $property;
}

@mixin transform($property...) {
  transform: $property;
}

@mixin gradient($direction, $list) {
  background: -webkit-linear-gradient($direction, $list);
  background: -moz-linear-gradient($direction, $list);
  background: -o-linear-gradient($direction, $list);
  background: linear-gradient($direction, $list);
}

@mixin linear-gradient($args...) {
  background: -webkit-linear-gradient($args);
  background: -moz-linear-gradient($args);
  background: -o-linear-gradient($args);
  background: linear-gradient($args);
}
